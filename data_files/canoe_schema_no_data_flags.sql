BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "Technology" (
	"tech"	text,
	"flag"	text,
	"sector"	text,
	"description"	text,
	"category"	text,
	"reference"	text,
	"additional_notes"	text,
	"sub_category"	,
	"unlim_cap"	INTEGER,
	"annual"	INTEGER,
	"reserve"	INTEGER,
	"curtail"	INTEGER,
	"retire"	INTEGER,
	"flex"	INTEGER,
	"variable"	INTEGER,
	"exchange"	INTEGER,
	PRIMARY KEY("tech"),
	FOREIGN KEY("flag") REFERENCES "TechnologyType"("label"),
	FOREIGN KEY("sector") REFERENCES "SectorLabel"("sector"),
	FOREIGN KEY("reference") REFERENCES "references"("reference")
);
CREATE TABLE IF NOT EXISTS "Commodity" (
	"name"	text,
	"flag"	text,
	"description"	text,
	"reference"	text,
	"additional_notes"	text,
	PRIMARY KEY("name"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("flag") REFERENCES "CommodityType"("label")
);
CREATE TABLE IF NOT EXISTS "TechOutputSplit" (
	"region"	TEXT,
	"period"	integer,
	"tech"	TEXT,
	"output_comm"	text,
	"min_proportion"	real,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	PRIMARY KEY("region","period","tech","output_comm"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("output_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("reference") REFERENCES "references"("reference")
);
CREATE TABLE IF NOT EXISTS "TechOutputSplitAverage" (
	"region"	TEXT,
	"period"	integer,
	"tech"	TEXT,
	"output_comm"	text,
	"min_proportion"	real,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	PRIMARY KEY("region","period","tech","output_comm"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("output_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period")
);
CREATE TABLE IF NOT EXISTS "TechInputSplit" (
	"region"	TEXT,
	"period"	integer,
	"input_comm"	text,
	"tech"	text,
	"min_proportion"	real,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	PRIMARY KEY("region","period","input_comm","tech"),
	FOREIGN KEY("input_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability")
);
CREATE TABLE IF NOT EXISTS "TechInputSplitAverage" (
	"region"	TEXT,
	"period"	integer,
	"input_comm"	text,
	"tech"	text,
	"min_proportion"	real,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	PRIMARY KEY("region","period","input_comm","tech"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("input_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology")
);
CREATE TABLE IF NOT EXISTS "TimeSegmentFraction" (
	"season"	text,
	"tod"	text,
	"segfrac"	real CHECK("segfrac" >= 0 AND "segfrac" <= 1),
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	PRIMARY KEY("season","tod"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("season") REFERENCES "TimeSeason"("season"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("tod") REFERENCES "TimeOfDay"("tod"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability")
);
CREATE TABLE IF NOT EXISTS "PlanningReserveMargin" (
	"region"	text,
	"margin"	REAL,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	PRIMARY KEY("region"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("region") REFERENCES "Region",
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness")
);
CREATE TABLE IF NOT EXISTS "RampDown" (
	"region"	text,
	"tech"	text,
	"rate"	real,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	PRIMARY KEY("region","tech"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech")
);
CREATE TABLE IF NOT EXISTS "RampUp" (
	"region"	text,
	"tech"	text,
	"rate"	real,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	PRIMARY KEY("region","tech"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech")
);
CREATE TABLE IF NOT EXISTS "MinCapacity" (
	"region"	text,
	"period"	integer,
	"tech"	text,
	"min_cap"	real,
	"units"	text,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	PRIMARY KEY("region","period","tech"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated")
);
CREATE TABLE IF NOT EXISTS "MinActivity" (
	"region"	text,
	"period"	integer,
	"tech"	text,
	"min_act"	real,
	"units"	text,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	PRIMARY KEY("region","period","tech")
);
CREATE TABLE IF NOT EXISTS "MaxCapacity" (
	"region"	text,
	"period"	integer,
	"tech"	text,
	"max_cap"	real,
	"units"	text,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	PRIMARY KEY("region","period","tech")
);
CREATE TABLE IF NOT EXISTS "MaxActivity" (
	"region"	text,
	"period"	integer,
	"tech"	text,
	"max_act"	real,
	"units"	text,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	PRIMARY KEY("region","period","tech")
);
CREATE TABLE IF NOT EXISTS "MinAnnualCapacityFactor" (
	"region"	text,
	"period"	integer,
	"tech"	text,
	"output_comm"	text,
	"factor"	real CHECK("factor" >= 0 AND "factor" <= 1),
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	"source"	,
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	PRIMARY KEY("region","period","tech","output_comm"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("output_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech")
);
CREATE TABLE IF NOT EXISTS "MaxAnnualCapacityFactor" (
	"region"	text,
	"period"	integer,
	"tech"	text,
	"output_comm"	text,
	"factor"	real CHECK("factor" >= 0 AND "factor" <= 1),
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	"source"	,
	PRIMARY KEY("region","period","tech","output_comm"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("output_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related")
);
CREATE TABLE IF NOT EXISTS "LifetimeTech" (
	"region"	text,
	"tech"	text,
	"lifetime"	real,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	PRIMARY KEY("region","tech"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography")
);
CREATE TABLE IF NOT EXISTS "LifetimeProcess" (
	"region"	text,
	"tech"	text,
	"vintage"	integer,
	"lifetime"	real,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	PRIMARY KEY("region","tech","vintage"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("vintage") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated")
);
CREATE TABLE IF NOT EXISTS "LoanLifetimeTech" (
	"region"	text,
	"tech"	text,
	"lifetime"	real,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	PRIMARY KEY("region","tech"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech")
);
CREATE TABLE IF NOT EXISTS "GrowthRateSeed" (
	"region"	text,
	"tech"	text,
	"seed"	real,
	"units"	text,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	PRIMARY KEY("region","tech")
);
CREATE TABLE IF NOT EXISTS "GrowthRateMax" (
	"region"	text,
	"tech"	text,
	"rate"	real,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	PRIMARY KEY("region","tech")
);
CREATE TABLE IF NOT EXISTS "ExistingCapacity" (
	"region"	text,
	"tech"	text,
	"vintage"	integer,
	"capacity"	real,
	"units"	text,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("vintage") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	PRIMARY KEY("region","tech","vintage")
);
CREATE TABLE IF NOT EXISTS "EmissionLimit" (
	"region"	text,
	"period"	integer,
	"emis_comm"	text,
	"value"	real,
	"units"	text,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("emis_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	PRIMARY KEY("region","period","emis_comm")
);
CREATE TABLE IF NOT EXISTS "EmissionActivity" (
	"region"	text,
	"emis_comm"	text,
	"input_comm"	text,
	"tech"	text,
	"vintage"	integer,
	"output_comm"	text,
	"activity"	real,
	"units"	text,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("output_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("emis_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("input_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("vintage") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	PRIMARY KEY("region","emis_comm","input_comm","tech","vintage","output_comm")
);
CREATE TABLE IF NOT EXISTS "Efficiency" (
	"region"	text,
	"input_comm"	text,
	"tech"	text,
	"vintage"	integer,
	"output_comm"	text,
	"efficiency"	real CHECK("efficiency" > 0),
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("input_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("vintage") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("output_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	PRIMARY KEY("region","input_comm","tech","vintage","output_comm")
);
CREATE TABLE IF NOT EXISTS "Demand" (
	"region"	text,
	"period"	integer,
	"commodity"	text,
	"demand"	real,
	"units"	text,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	PRIMARY KEY("region","period","commodity"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("commodity") REFERENCES "Commodity"("name")
);
CREATE TABLE IF NOT EXISTS "CostVariable" (
	"region"	text NOT NULL,
	"period"	integer NOT NULL,
	"tech"	text NOT NULL,
	"vintage"	integer NOT NULL,
	"cost"	real,
	"units"	text,
	"notes"	text,
	"data_cost_variable"	REAL,
	"data_cost_year"	INTEGER,
	"data_curr"	TEXT,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	PRIMARY KEY("region","period","tech","vintage"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("vintage") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("data_curr") REFERENCES "currencies"("curr_label"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability")
);
CREATE TABLE IF NOT EXISTS "CostInvest" (
	"region"	text,
	"tech"	text,
	"vintage"	integer,
	"cost"	real,
	"units"	text,
	"notes"	text,
	"data_cost_invest"	REAL,
	"data_cost_year"	INTEGER,
	"data_curr"	TEXT,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	PRIMARY KEY("region","tech","vintage"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("data_curr") REFERENCES "currencies"("curr_label"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("vintage") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related")
);
CREATE TABLE IF NOT EXISTS "CostFixed" (
	"region"	text NOT NULL,
	"period"	integer NOT NULL,
	"tech"	text NOT NULL,
	"vintage"	integer NOT NULL,
	"cost"	real,
	"units"	text,
	"notes"	text,
	"data_cost_fixed"	REAL,
	"data_cost_year"	INTEGER,
	"data_curr"	TEXT,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	PRIMARY KEY("region","period","tech","vintage"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("data_curr") REFERENCES "currencies"("curr_label"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("vintage") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related")
);
CREATE TABLE IF NOT EXISTS "CapacityToActivity" (
	"region"	text,
	"tech"	text,
	"c2a"	real,
	"notes"	TEXT,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	PRIMARY KEY("region","tech"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography")
);
CREATE TABLE IF NOT EXISTS "CapacityFactorTech" (
	"region"	text,
	"season"	text,
	"tod"	text,
	"tech"	text,
	"factor"	real CHECK("factor" >= 0 AND "factor" <= 1),
	"cf_tech_notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("tod") REFERENCES "TimeOfDay"("tod"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("season") REFERENCES "TimeSeason"("season"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	PRIMARY KEY("region","season","tod","tech")
);
CREATE TABLE IF NOT EXISTS "CapacityFactorProcess" (
	"region"	text,
	"season"	text,
	"tod"	text,
	"tech"	text,
	"vintage"	integer,
	"factor"	real CHECK("factor" >= 0 AND "factor" <= 1),
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("season") REFERENCES "TimeSeason"("season"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("tod") REFERENCES "TimeOfDay"("tod"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	PRIMARY KEY("region","season","tod","tech","vintage")
);
CREATE TABLE IF NOT EXISTS "CapacityCredit" (
	"region"	text,
	"period"	integer,
	"tech"	text,
	"vintage"	integer,
	"credit"	real CHECK("credit" >= 0 AND "credit" <= 1),
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	PRIMARY KEY("region","period","tech","vintage")
);
CREATE TABLE IF NOT EXISTS "MaxResource" (
	"region"	text,
	"tech"	text,
	"max_res"	real,
	"units"	text,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	PRIMARY KEY("region","tech")
);
CREATE TABLE IF NOT EXISTS "LinkedTech" (
	"primary_region"	text,
	"primary_tech"	text,
	"emis_comm"	text,
	"driven_tech"	text,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("primary_tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("driven_tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("emis_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	PRIMARY KEY("primary_region","primary_tech","emis_comm")
);
CREATE TABLE IF NOT EXISTS "MaxSeasonalActivity" (
	"region"	text,
	"period"	integer,
	"season"	text,
	"tech"	text,
	"max_act"	real,
	"units"	text,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("season") REFERENCES "TimeSeason"("season"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	PRIMARY KEY("region","period","season","tech")
);
CREATE TABLE IF NOT EXISTS "MinSeasonalActivity" (
	"region"	text,
	"period"	integer,
	"season"	text,
	"tech"	text,
	"min_act"	real,
	"units"	text,
	"notes"	text,
	"reference"	text,
	"data_year"	integer,
	"data_flags"	text,
	"dq_est"	integer,
	"dq_rel"	integer,
	"dq_comp"	integer,
	"dq_time"	integer,
	"dq_geog"	integer,
	"dq_tech"	integer,
	"additional_notes"	text,
	FOREIGN KEY("dq_time") REFERENCES "dq_estimate"("data_quality_time_related"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("dq_tech") REFERENCES "dq_estimate"("data_quality_technology"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("reference") REFERENCES "references"("reference"),
	FOREIGN KEY("dq_rel") REFERENCES "dq_estimate"("data_quality_reliability"),
	FOREIGN KEY("dq_est") REFERENCES "dq_estimate"("data_quality_estimated"),
	FOREIGN KEY("season") REFERENCES "TimeSeason"("season"),
	FOREIGN KEY("dq_comp") REFERENCES "dq_estimate"("data_quality_completeness"),
	FOREIGN KEY("dq_geog") REFERENCES "dq_estimate"("data_quality_geography"),
	PRIMARY KEY("region","period","season","tech")
);
CREATE TABLE IF NOT EXISTS "references" (
	"reference"	text,
	CONSTRAINT "references_PK" PRIMARY KEY("reference")
);
CREATE TABLE IF NOT EXISTS "CommodityType" (
	"label"	TEXT,
	"description"	TEXT,
	"reference"	REAL,
	"additional_notes"	REAL
);
CREATE TABLE IF NOT EXISTS "currencies" (
	"curr_label"	TEXT,
	"currency_description"	TEXT,
	"reference"	REAL,
	"additional_notes"	REAL
);
CREATE TABLE IF NOT EXISTS "dq_estimate" (
	"data_quality_estimated"	INTEGER,
	"dq_est_description"	REAL,
	"reference"	REAL,
	"additional_notes"	REAL
);
CREATE TABLE IF NOT EXISTS "dq_reliability" (
	"data_quality_reliability"	INTEGER,
	"dq_rel_description"	REAL,
	"reference"	REAL,
	"additional_notes"	REAL
);
CREATE TABLE IF NOT EXISTS "dq_completeness" (
	"data_quality_completeness"	INTEGER,
	"dq_comp_description"	REAL,
	"reference"	REAL,
	"additional_notes"	REAL
);
CREATE TABLE IF NOT EXISTS "dq_time" (
	"data_quality_time_related"	INTEGER,
	"dq_time_description"	REAL,
	"reference"	REAL,
	"additional_notes"	REAL
);
CREATE TABLE IF NOT EXISTS "dq_geography" (
	"data_quality_geography"	INTEGER,
	"dq_geog_description"	REAL,
	"reference"	REAL,
	"additional_notes"	REAL
);
CREATE TABLE IF NOT EXISTS "dq_technology" (
	"data_quality_technology"	INTEGER,
	"dq_tech_description"	REAL,
	"reference"	REAL,
	"additional_notes"	REAL
);
CREATE TABLE IF NOT EXISTS "Region" (
	"region"	TEXT,
	"region_note"	TEXT,
	"reference"	REAL,
	"additional_notes"	REAL
);
CREATE TABLE IF NOT EXISTS "SectorLabel" (
	"sector"	TEXT,
	"reference"	REAL,
	"additional_notes"	REAL
);
CREATE TABLE IF NOT EXISTS "TechnologyType" (
	"label"	TEXT,
	"description"	TEXT,
	"reference"	REAL,
	"additional_notes"	REAL
);
CREATE TABLE IF NOT EXISTS "TimePeriodType" (
	"label"	TEXT,
	"description"	TEXT,
	"reference"	REAL,
	"additional_notes"	REAL
);
CREATE TABLE IF NOT EXISTS "TimePeriod" (
	"period"	INTEGER,
	"flag"	TEXT,
	"reference"	REAL,
	"additional_notes"	REAL,
	"sequence"	
);
CREATE TABLE IF NOT EXISTS "TimeSeason" (
	"season"	TEXT,
	"reference"	REAL,
	"additional_notes"	REAL,
	"sequence"	
);
CREATE TABLE IF NOT EXISTS "TimeOfDay" (
	"tod"	TEXT,
	"reference"	REAL,
	"additional_notes"	REAL,
	"sequence"	
);
CREATE TABLE IF NOT EXISTS "StorageDuration" (
	"region"	TEXT,
	"tech"	TEXT,
	"duration"	INTEGER,
	"notes"	TEXT,
	"reference"	REAL,
	"data_year"	REAL,
	"data_flags"	REAL,
	"dq_est"	REAL,
	"dq_rel"	REAL,
	"dq_comp"	REAL,
	"dq_time"	REAL,
	"dq_geog"	REAL,
	"dq_tech"	REAL,
	"additional_notes"	REAL
);
CREATE TABLE IF NOT EXISTS "DemandSpecificDistribution" (
	"region"	TEXT,
	"season"	TEXT,
	"tod"	TEXT,
	"demand_name"	TEXT,
	"dsd"	REAL,
	"notes"	TEXT,
	"reference"	TEXT,
	"data_year"	INTEGER,
	"data_flags"	TEXT,
	"dq_est"	TEXT,
	"dq_rel"	INTEGER,
	"dq_comp"	INTEGER,
	"dq_time"	INTEGER,
	"dq_geog"	INTEGER,
	"dq_tech"	INTEGER,
	"additional_notes"	TEXT
);
CREATE TABLE IF NOT EXISTS "CostEmission" (
	"region"	TEXT,
	"period"	INTEGER,
	"emis_comm"	TEXT NOT NULL,
	"cost"	REAL NOT NULL,
	"units"	TEXT,
	"notes"	TEXT,
	"reference"	,
	"data_year"	,
	"data_flags"	,
	"dq_est"	,
	"dq_rel"	,
	"dq_comp"	,
	"dq_time"	,
	"dq_geog"	,
	"dq_tech"	,
	"additional_notes"	,
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("region") REFERENCES "Region"("region"),
	FOREIGN KEY("emis_comm") REFERENCES "Commodity"("name"),
	PRIMARY KEY("region","period","emis_comm")
);
CREATE TABLE IF NOT EXISTS "LoanRate" (
	"region"	TEXT,
	"tech"	TEXT,
	"vintage"	INTEGER,
	"rate"	REAL,
	"notes"	TEXT,
	FOREIGN KEY("vintage") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	PRIMARY KEY("region","tech","vintage")
);
CREATE TABLE IF NOT EXISTS "MaxActivityGroup" (
	"region"	TEXT,
	"period"	INTEGER,
	"group_name"	TEXT,
	"max_act"	REAL,
	"units"	TEXT,
	"notes"	TEXT,
	"reference"	,
	"data_year"	,
	"data_flags"	,
	"dq_est"	,
	"dq_rel"	,
	"dq_comp"	,
	"dq_time"	,
	"dq_geog"	,
	"dq_tech"	,
	"additional_notes"	,
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("group_name") REFERENCES "TechGroup"("group_name"),
	PRIMARY KEY("region","period","group_name")
);
CREATE TABLE IF NOT EXISTS "MaxActivityShare" (
	"region"	TEXT,
	"period"	INTEGER,
	"tech"	TEXT,
	"group_name"	TEXT,
	"max_proportion"	REAL,
	"notes"	TEXT,
	"reference"	,
	"data_year"	,
	"data_flags"	,
	"dq_est"	,
	"dq_rel"	,
	"dq_comp"	,
	"dq_time"	,
	"dq_geog"	,
	"dq_tech"	,
	"additional_notes"	,
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("group_name") REFERENCES "TechGroup"("group_name"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	PRIMARY KEY("region","period","tech","group_name")
);
CREATE TABLE IF NOT EXISTS "MaxCapacityGroup" (
	"region"	TEXT,
	"period"	INTEGER,
	"group_name"	TEXT,
	"max_cap"	REAL,
	"units"	TEXT,
	"notes"	TEXT,
	"reference"	,
	"data_year"	,
	"data_flags"	,
	"dq_est"	,
	"dq_rel"	,
	"dq_comp"	,
	"dq_time"	,
	"dq_geog"	,
	"dq_tech"	,
	"additional_notes"	,
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("group_name") REFERENCES "TechGroup"("group_name"),
	PRIMARY KEY("region","period","group_name")
);
CREATE TABLE IF NOT EXISTS "MaxCapacityShare" (
	"region"	TEXT,
	"period"	INTEGER,
	"tech"	TEXT,
	"group_name"	TEXT,
	"max_proportion"	REAL,
	"notes"	TEXT,
	"reference"	,
	"data_year"	,
	"data_flags"	,
	"dq_est"	,
	"dq_rel"	,
	"dq_comp"	,
	"dq_time"	,
	"dq_geog"	,
	"dq_tech"	,
	"additional_notes"	,
	FOREIGN KEY("group_name") REFERENCES "TechGroup"("group_name"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	PRIMARY KEY("region","period","tech","group_name")
);
CREATE TABLE IF NOT EXISTS "MaxNewCapacity" (
	"region"	TEXT,
	"period"	INTEGER,
	"tech"	TEXT,
	"max_cap"	REAL,
	"units"	TEXT,
	"notes"	TEXT,
	"reference"	,
	"data_year"	,
	"data_flags"	,
	"dq_est"	,
	"dq_rel"	,
	"dq_comp"	,
	"dq_time"	,
	"dq_geog"	,
	"dq_tech"	,
	"additional_notes"	,
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	PRIMARY KEY("region","period","tech")
);
CREATE TABLE IF NOT EXISTS "MaxNewCapacityGroup" (
	"region"	TEXT,
	"period"	INTEGER,
	"group_name"	TEXT,
	"max_new_cap"	REAL,
	"units"	TEXT,
	"notes"	TEXT,
	"reference"	,
	"data_year"	,
	"data_flags"	,
	"dq_est"	,
	"dq_rel"	,
	"dq_comp"	,
	"dq_time"	,
	"dq_geog"	,
	"dq_tech"	,
	"additional_notes"	,
	PRIMARY KEY("region","period","group_name"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("group_name") REFERENCES "TechGroup"("group_name")
);
CREATE TABLE IF NOT EXISTS "MaxNewCapacityShare" (
	"region"	TEXT,
	"period"	INTEGER,
	"tech"	TEXT,
	"group_name"	TEXT,
	"max_proportion"	REAL,
	"notes"	TEXT,
	"reference"	,
	"data_year"	,
	"data_flags"	,
	"dq_est"	,
	"dq_rel"	,
	"dq_comp"	,
	"dq_time"	,
	"dq_geog"	,
	"dq_tech"	,
	"additional_notes"	,
	PRIMARY KEY("region","period","tech","group_name"),
	FOREIGN KEY("group_name") REFERENCES "TechGroup"("group_name"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period")
);
CREATE TABLE IF NOT EXISTS "MetaData" (
	"element"	TEXT,
	"value"	INT,
	"notes"	TEXT,
	PRIMARY KEY("element")
);
CREATE TABLE IF NOT EXISTS "MetaDataReal" (
	"element"	TEXT,
	"value"	REAL,
	"notes"	TEXT,
	PRIMARY KEY("element")
);
CREATE TABLE IF NOT EXISTS "MinActivityGroup" (
	"region"	TEXT,
	"period"	INTEGER,
	"group_name"	TEXT,
	"min_act"	REAL,
	"units"	TEXT,
	"notes"	TEXT,
	"reference"	,
	"data_year"	,
	"data_flags"	,
	"dq_est"	,
	"dq_rel"	,
	"dq_comp"	,
	"dq_time"	,
	"dq_geog"	,
	"dq_tech"	,
	"additional_notes"	,
	PRIMARY KEY("region","period","group_name"),
	FOREIGN KEY("group_name") REFERENCES "TechGroup"("group_name"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period")
);
CREATE TABLE IF NOT EXISTS "MinActivityShare" (
	"region"	TEXT,
	"period"	INTEGER,
	"tech"	TEXT,
	"group_name"	TEXT,
	"min_proportion"	REAL,
	"notes"	TEXT,
	"reference"	,
	"data_year"	,
	"data_flags"	,
	"dq_est"	,
	"dq_rel"	,
	"dq_comp"	,
	"dq_time"	,
	"dq_geog"	,
	"dq_tech"	,
	"additional_notes"	,
	PRIMARY KEY("region","period","tech","group_name"),
	FOREIGN KEY("group_name") REFERENCES "TechGroup"("group_name"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech")
);
CREATE TABLE IF NOT EXISTS "MinCapacityGroup" (
	"region"	TEXT,
	"period"	INTEGER,
	"group_name"	TEXT,
	"min_cap"	REAL,
	"units"	TEXT,
	"notes"	TEXT,
	"reference"	,
	"data_year"	,
	"data_flags"	,
	"dq_est"	,
	"dq_rel"	,
	"dq_comp"	,
	"dq_time"	,
	"dq_geog"	,
	"dq_tech"	,
	"additional_notes"	,
	PRIMARY KEY("region","period","group_name"),
	FOREIGN KEY("group_name") REFERENCES "TechGroup"("group_name"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period")
);
CREATE TABLE IF NOT EXISTS "MinCapacityShare" (
	"region"	TEXT,
	"period"	INTEGER,
	"tech"	TEXT,
	"group_name"	TEXT,
	"min_proportion"	REAL,
	"notes"	TEXT,
	"reference"	,
	"data_year"	,
	"data_flags"	,
	"dq_est"	,
	"dq_rel"	,
	"dq_comp"	,
	"dq_time"	,
	"dq_geog"	,
	"dq_tech"	,
	"additional_notes"	,
	PRIMARY KEY("region","period","tech","group_name"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("group_name") REFERENCES "TechGroup"("group_name")
);
CREATE TABLE IF NOT EXISTS "MinNewCapacity" (
	"region"	TEXT,
	"period"	INTEGER,
	"tech"	TEXT,
	"min_cap"	REAL,
	"units"	TEXT,
	"notes"	TEXT,
	"reference"	,
	"data_year"	,
	"data_flags"	,
	"dq_est"	,
	"dq_rel"	,
	"dq_comp"	,
	"dq_time"	,
	"dq_geog"	,
	"dq_tech"	,
	"additional_notes"	,
	PRIMARY KEY("region","period","tech"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period")
);
CREATE TABLE IF NOT EXISTS "MinNewCapacityGroup" (
	"region"	TEXT,
	"period"	INTEGER,
	"group_name"	TEXT,
	"min_new_cap"	REAL,
	"units"	TEXT,
	"notes"	TEXT,
	"reference"	,
	"data_year"	,
	"data_flags"	,
	"dq_est"	,
	"dq_rel"	,
	"dq_comp"	,
	"dq_time"	,
	"dq_geog"	,
	"dq_tech"	,
	"additional_notes"	,
	PRIMARY KEY("region","period","group_name"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("group_name") REFERENCES "TechGroup"("group_name")
);
CREATE TABLE IF NOT EXISTS "MinNewCapacityShare" (
	"region"	TEXT,
	"period"	INTEGER,
	"tech"	TEXT,
	"group_name"	TEXT,
	"max_proportion"	REAL,
	"notes"	TEXT,
	"reference"	,
	"data_year"	,
	"data_flags"	,
	"dq_est"	,
	"dq_rel"	,
	"dq_comp"	,
	"dq_time"	,
	"dq_geog"	,
	"dq_tech"	,
	"additional_notes"	,
	PRIMARY KEY("region","period","tech","group_name"),
	FOREIGN KEY("group_name") REFERENCES "TechGroup"("group_name"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech")
);
CREATE TABLE IF NOT EXISTS "OutputBuiltCapacity" (
	"scenario"	TEXT,
	"region"	TEXT,
	"sector"	TEXT,
	"tech"	TEXT,
	"vintage"	INTEGER,
	"capacity"	REAL,
	PRIMARY KEY("region","scenario","tech","vintage"),
	FOREIGN KEY("sector") REFERENCES "SectorLabel"("sector"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("vintage") REFERENCES "TimePeriod"("period")
);
CREATE TABLE IF NOT EXISTS "OutputCost" (
	"scenario"	TEXT,
	"region"	TEXT,
	"period"	INTEGER,
	"tech"	TEXT,
	"vintage"	INTEGER,
	"d_invest"	REAL,
	"d_fixed"	REAL,
	"d_var"	REAL,
	"d_emiss"	REAL,
	"invest"	REAL,
	"fixed"	REAL,
	"var"	REAL,
	"emiss"	REAL,
	PRIMARY KEY("scenario","region","period","tech","vintage"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("vintage") REFERENCES "TimePeriod"("period")
);
CREATE TABLE IF NOT EXISTS "OutputCurtailment" (
	"scenario"	TEXT,
	"region"	TEXT,
	"sector"	TEXT,
	"period"	INTEGER,
	"season"	TEXT,
	"tod"	TEXT,
	"input_comm"	TEXT,
	"tech"	TEXT,
	"vintage"	INTEGER,
	"output_comm"	TEXT,
	"curtailment"	REAL,
	PRIMARY KEY("region","scenario","period","season","tod","input_comm","tech","vintage","output_comm"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("input_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("output_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("vintage") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("season") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("tod") REFERENCES "TimeOfDay"("tod")
);
CREATE TABLE IF NOT EXISTS "OutputDualVariable" (
	"scenario"	TEXT,
	"constraint_name"	TEXT,
	"dual"	REAL,
	PRIMARY KEY("constraint_name","scenario")
);
CREATE TABLE IF NOT EXISTS "OutputEmission" (
	"scenario"	TEXT,
	"region"	TEXT,
	"sector"	TEXT,
	"period"	INTEGER,
	"emis_comm"	TEXT,
	"tech"	TEXT,
	"vintage"	INTEGER,
	"emission"	REAL,
	PRIMARY KEY("region","scenario","period","emis_comm","tech","vintage"),
	FOREIGN KEY("emis_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("vintage") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("sector") REFERENCES "SectorLabel"("sector"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech")
);
CREATE TABLE IF NOT EXISTS "OutputFlowIn" (
	"scenario"	TEXT,
	"region"	TEXT,
	"sector"	TEXT,
	"period"	INTEGER,
	"season"	TEXT,
	"tod"	TEXT,
	"input_comm"	TEXT,
	"tech"	TEXT,
	"vintage"	INTEGER,
	"output_comm"	TEXT,
	"flow"	REAL,
	PRIMARY KEY("region","scenario","period","season","tod","input_comm","tech","vintage","output_comm"),
	FOREIGN KEY("vintage") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("output_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("season") REFERENCES "TimeSeason"("season"),
	FOREIGN KEY("input_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("sector") REFERENCES "SectorLabel"("sector"),
	FOREIGN KEY("tod") REFERENCES "TimeOfDay"("tod")
);
CREATE TABLE IF NOT EXISTS "OutputFlowOut" (
	"scenario"	TEXT,
	"region"	TEXT,
	"sector"	TEXT,
	"period"	INTEGER,
	"season"	TEXT,
	"tod"	TEXT,
	"input_comm"	TEXT,
	"tech"	TEXT,
	"vintage"	INTEGER,
	"output_comm"	TEXT,
	"flow"	REAL,
	PRIMARY KEY("region","scenario","period","season","tod","input_comm","tech","vintage","output_comm"),
	FOREIGN KEY("vintage") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("sector") REFERENCES "SectorLabel"("sector"),
	FOREIGN KEY("tod") REFERENCES "TimeOfDay"("tod"),
	FOREIGN KEY("input_comm") REFERENCES "Commodity"("name"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("season") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("output_comm") REFERENCES "Commodity"("name")
);
CREATE TABLE IF NOT EXISTS "OutputNetCapacity" (
	"scenario"	TEXT,
	"region"	TEXT,
	"sector"	TEXT,
	"period"	INTEGER,
	"tech"	TEXT,
	"vintage"	INTEGER,
	"capacity"	REAL,
	PRIMARY KEY("region","scenario","period","tech","vintage"),
	FOREIGN KEY("sector") REFERENCES "SectorLabel"("sector"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("vintage") REFERENCES "TimePeriod"("period")
);
CREATE TABLE IF NOT EXISTS "OutputObjective" (
	"scenario"	TEXT,
	"objective_name"	TEXT,
	"total_system_cost"	REAL
);
CREATE TABLE IF NOT EXISTS "OutputRetiredCapacity" (
	"scenario"	TEXT,
	"region"	TEXT,
	"sector"	TEXT,
	"period"	INTEGER,
	"tech"	TEXT,
	"vintage"	INTEGER,
	"capacity"	REAL,
	PRIMARY KEY("region","scenario","period","tech","vintage"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech"),
	FOREIGN KEY("vintage") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("sector") REFERENCES "SectorLabel"("sector")
);
CREATE TABLE IF NOT EXISTS "RPSRequirement" (
	"region"	TEXT NOT NULL,
	"period"	INTEGER NOT NULL,
	"tech_group"	TEXT NOT NULL,
	"requirement"	REAL NOT NULL,
	"notes"	TEXT,
	FOREIGN KEY("region") REFERENCES "Region"("region"),
	FOREIGN KEY("period") REFERENCES "TimePeriod"("period"),
	FOREIGN KEY("tech_group") REFERENCES "TechGroup"("group_name")
);
CREATE TABLE IF NOT EXISTS "StorageInit" (
	"tech"	TEXT,
	"value"	REAL,
	"notes"	TEXT,
	"reference"	,
	"data_year"	,
	"data_flags"	,
	"dq_est"	,
	"dq_rel"	,
	"dq_comp"	,
	"dq_time"	,
	"dq_geog"	,
	"dq_tech"	,
	"additional_notes"	,
	PRIMARY KEY("tech")
);
CREATE TABLE IF NOT EXISTS "TechGroup" (
	"group_name"	TEXT,
	"notes"	TEXT,
	PRIMARY KEY("group_name")
);
CREATE TABLE IF NOT EXISTS "TechGroupMember" (
	"group_name"	TEXT,
	"tech"	TEXT,
	PRIMARY KEY("group_name","tech"),
	FOREIGN KEY("group_name") REFERENCES "TechGroup"("group_name"),
	FOREIGN KEY("tech") REFERENCES "Technology"("tech")
);
COMMIT;
